pipeline {
    agent any
        tools{
            maven  'Maven_3.9'
            jdk 'JDK_17'
        }
        environment{
            IMAGE_NAME="vinod-demo-app"
            IMAGE_TAG="latest"
            username="vinnu1487"
            repo="demo1"
            password="Vinod1487@"
        }
        stages{
            stage('Checkout'){
                steps{
                    git branch: 'main', url: 'https://github.com/vinodkumarthati/demo1.git'
                    echo 'Code Checkout Completed'
        }
            }
            stage('Build'){
                steps{
                    echo 'Building the Application'
                    sh ' mvn clean package -DskipTests'
                }
            }
            stage('test'){
                steps{
                    echo 'Running Unit Tests'
                    sh ' mvn test '
                }
            }
            stage('Run Application'){
                steps{
                    echo 'Running the Java Application'
                    sh "java -cp target/demo-1.0.0.jar com.example.App"
                }
            }
            stage('Archive Artifacts'){
                steps{
                    echo 'Archiving the Artifacts'
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true

                }}
                stage('Build Docker Image') {
            steps {
                echo "Building Docker image: ${IMAGE_NAME}:${IMAGE_TAG}"
                script {
                    sh """
                        docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                    """
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                echo "Running Docker container from image..."
                script {
                    sh """
                        docker run -d -p 8001:8001 --name demo-app ${IMAGE_NAME}:${IMAGE_TAG} || true
                    """
                }
            }
        }
    
                post{ 
                    always
                    {
                        success{
                            echo 'pipeline completed succesfully'
                        }
                        failure{
                            echo 'pipeline failed'
                    }
                    }
                
                        
                    }
    }
}
                        

